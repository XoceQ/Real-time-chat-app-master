# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI - Jest Tests

on:
  push:
    branches:
      - testing
  pull_request:
    branches:
      - testing

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""  # Sin contraseña
          MYSQL_DATABASE: real_time_chat_app
          MYSQL_USER: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: 📥 Clonar el repositorio
        uses: actions/checkout@v3

      - name: 🏗️ Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.15.1
          cache: 'npm'

      - name: 📦 Instalar dependencias
        run: npm install

      - name: 🚀 Esperar a que MySQL esté listo
        run: sleep 15  # Espera 15 segundos para que MySQL arranque

      - name: 🛠️ Configurar la base de datos
        env:
          DATABASE_URL: "mysql://root@localhost:3306/real_time_chat_app"
        run: |
          npx prisma generate
          npx prisma migrate deploy

      - name: 🧪 Ejecutar pruebas específicas con Jest
        env:
          DATABASE_URL: "mysql://root@localhost:3306/real_time_chat_app"
        run: |
          npm test -- \
            pages/api/socket/direct-messages/tests/ioHandler.test.ts \
            pages/api/socket/direct-messages/tests/messageHandler.test.ts \
            pages/api/socket/direct-messages/tests/messageHandlerPost.test.ts \
            lib/tests/currentProfile.test.ts
