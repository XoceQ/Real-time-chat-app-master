# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI - Run Jest & Cypress Tests

on:
  push:
    branches:
      - testing
  pull_request:
    branches:
      - testing

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ""  # Sin contraseña
          MYSQL_DATABASE: real_time_chat_app
          MYSQL_USER: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: 📥 Clonar el repositorio
        uses: actions/checkout@v3

      - name: 🏗️ Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.15.1
          cache: 'npm'

      - name: 📦 Instalar dependencias
        run: npm install

      - name: 🔍 Esperar a que MySQL esté listo
        run: sleep 15

      - name: 🛠️ Crear esquema de base de datos (opcional)
        run: |
          mysql -h 127.0.0.1 -u root -e "CREATE DATABASE IF NOT EXISTS real_time_chat_app;"

      - name: 🚀 Iniciar servidor en segundo plano
        run: npm run dev &

      - name: ⏳ Esperar a que el servidor esté listo
        run: sleep 10

      - name: 🧪 Ejecutar pruebas unitarias con Jest
        env:
          DATABASE_URL: mysql://root@127.0.0.1:3306/real_time_chat_app
        run: |
          npx jest pages/api/socket/direct-messages/tests/ioHandler.test.ts
          npx jest pages/api/socket/direct-messages/tests/messageHandler.test.ts
          npx jest pages/api/socket/direct-messages/tests/messageHandlerPost.test.ts
          npx jest lib/tests/currentProfile.test.ts

      - name: 🏗️ Instalar Cypress
        run: npx cypress install

      - name: 🧪 Ejecutar pruebas de Component Testing con Cypress
        run: npx cypress run --component

      
